IsNotPrime:
	push rBP
	rBP = rSP
	rSP -= 32
	
	rAX = rDI	#check_num = input
	rBX = rDI	#factor = input
IsNotPrimeLoop:
	rBX--		#factor--
	
	rCX = rAX
	rCX %= rBX	#prime_check = check_num % factor
	
	if rCX != 0 goto IsNotPrimeLoop
#end of IsNotPrimeLoop
	rBX--
	rAX = rBX	#if factor is 1 then it is prime and rAX will be zero
	rSP = rBP
	rBP = pop
	return
	
main:
	push rBP
	rBP = rSP
	rSP -= 32
	
	rAX = in
	mem[rBP-8] = rAX	#store max_num
	mem[rBP-16] = 2		#store check_num
	
PrimeLoop:
	rAX = mem[rBP-8]	
	rBX = mem[rBP-16]	 
	if rBX > rAX goto ExitPrimeLoop
	
	rDI = mem[rBP-16]	#see if check_num is prime
	call IsNotPrime
	if rAX != 0 goto SkipPrint #if rAX is not prime, do not print it
	
	rDI = mem[rBP-16]
	out rDI

SkipPrint:
	rCX = mem[rBP-16]	#check_num++
	rCX++
	mem[rBP-16] = rCX
	
	goto PrimeLoop
	
ExitPrimeLoop:
	rSP = rBP
	rBP = pop
	return
	
	