#computes (input 1) ^ (input 2)
main:
	push rBP
	rBP = rSP
	rSP -= 16
	
	rDI = in
	rSI = in
	
	call power
	
	out rAX
	
	rSP = rBP
	rBP = pop
	return
#rDI ^ rSI
power:
	push rBP
	rBP = rSP
	rSP -= 16
	
	mem[rBP-8] = rDI
	
	if rSI == 0 goto zero_case
	rBX = rSI
	rBX %= 2
	if rBX == 1 goto odd_case
#even_case
	rSI /= 2
	call power
	
	rAX *= rAX		#return (output of previous) ^ 2
	goto exit_pow
odd_case:
	#rAX = power(x , (n-1))
	rSI -= 1
	call power
	
	rBX = mem[rBP-8]
	rAX *= rBX		#return x * pow_result
	goto exit_pow
zero_case:
	rAX = 1		#output = 1
exit_pow:
	rSP = rBP
	rBP = pop
	return